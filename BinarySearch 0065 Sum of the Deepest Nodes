class Solution {
public:
    int solve(TreeNode* root) {
        int depth = dfs1(root);
        vector<int> ans;
        dfs2(root, 1, depth, ans);
        return accumulate(ans.begin(), ans.end(), 0);
    }

private:
    int dfs1(TreeNode* node) {
        if (!node) return 0;
        return max(dfs1(node->left), dfs1(node->right)) + 1;
    }
    
    void dfs2(TreeNode* node, int d, int depth, vector<int>& ans) {
        if (!node) return;
        if (d == depth) ans.push_back(node->val);
        dfs2(node->left, d + 1, depth, ans);
        dfs2(node->right, d + 1, depth, ans);
    }
};
