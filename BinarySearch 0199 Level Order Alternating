class Solution {
public:
    vector<int> solve(TreeNode* root) {
        if (!root) return {};
        deque<TreeNode*> queue;
        vector<int> result;
        int direction = 1; // 1 for left-to-right, -1 for right-to-left
        
        queue.push_back(root);
        
        while (!queue.empty()) {
            vector<int> level;
            int size = queue.size();
            
            for (int i = 0; i < size; ++i) {
                TreeNode* node = queue.front();
                queue.pop_front();
                level.push_back(node->val);
                
                if (node->left) queue.push_back(node->left);
                if (node->right) queue.push_back(node->right);
            }
            
            if (direction == 1) {
                result.insert(result.end(), level.begin(), level.end());
            } else {
                result.insert(result.end(), level.rbegin(), level.rend());
            }
            
            direction *= -1;
        }
        
        return result;
    }
};
